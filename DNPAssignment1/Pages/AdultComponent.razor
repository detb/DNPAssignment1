@page "/AddAdult"
@using global::Models
@using DNPAssignment1.Data
@using DNPAssignment1.Models.Enums
@inject ICachingService CachingService;
@inject NavigationManager NavigationManager;

<div class='adultItem @(IsOpen ? "" : "closed")'>
    <input type="button" class="minWindow" @onclick="toggle" value="_" />
    @if (IsOpen || newAdult.FirstName == null || newAdult.FirstName == "")
    {
        <h4>Add adult</h4>
    }
    else
    {
        <h4>@newAdult.FirstName @newAdult.LastName</h4>
    }
    <EditForm Model="@newAdult" OnValidSubmit="@AddNewAdult">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            First name: <br />
            <InputText @bind-Value="newAdult.FirstName" disabled="@IsDisabled" />
        </div>
        <div class="form-group">
            Last name: <br />
            <InputText @bind-Value="newAdult.LastName" disabled="@IsDisabled" />
        </div>
        <div class="form-group">
            Hair colour: <br />
            <InputSelect @bind-Value="newAdult.HairColor" disabled="@IsDisabled">
                <option value="" selected disabled hidden>Choose here</option>
                @foreach (var value in Enum.GetValues(typeof(HairColours)))
                {
                    <option>@value</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            Eye colour: <br />
            <InputSelect @bind-Value="newAdult.EyeColor" disabled="@IsDisabled">
                <option value="" selected disabled hidden>Choose here</option>
                @foreach (var value in Enum.GetValues(typeof(EyeColours)))
                {
                    <option>@value</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            Age:<br />
            <InputNumber @bind-Value="newAdult.Age" disabled="@IsDisabled" />
        </div>
        <div class="form-group">
            Weight:<br />
            <InputNumber @bind-Value="newAdult.Weight" disabled="@IsDisabled" />
        </div>
        <div class="form-group">
            Height:<br />
            <InputNumber @bind-Value="newAdult.Height" disabled="@IsDisabled" />
        </div>
        <div class="form-group">
            Sex: <br />
            <InputSelect @bind-Value="newAdult.Sex" disabled="@IsDisabled">
                <option value="" selected disabled hidden>Choose here</option>
                <option value="M">Male</option>
                <option value="F">Female</option>
                <option value="O">Other</option>
            </InputSelect>
        </div>
        <div class="form-group">
            Job Title: <br />
            <InputSelect @bind-Value="newAdult.JobTitle" disabled="@IsDisabled">
                <option value="" selected disabled hidden>Choose here</option>
                @foreach (var value in Enum.GetValues(typeof(Jobs)))
                {
                    <option>@value</option>
                }
            </InputSelect>
        </div>
        <p class="actions">
            <button class="btn btn-primary @(IsDisabled ? "active" : "")" type="submit" disabled="@IsDisabled">@buttonName</button>
        </p>
    </EditForm>
</div>

        @code {
            private Adult newAdult = new Adult();
            protected bool IsDisabled { get; set; } = false;
            private bool IsOpen { get; set; } = true;

            private string buttonName = "Add";

            private void AddNewAdult()
            {
                buttonName = "Added";
                IsOpen = !IsOpen;
                IsDisabled = true;
                System.Console.WriteLine(newAdult.JobTitle + newAdult.FirstName + newAdult.EyeColor);
                CachingService.AddAdult(newAdult);
            }

            private void toggle()
            {
                IsOpen = !IsOpen;
            }
        }
